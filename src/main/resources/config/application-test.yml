#server setting
server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
  servlet:
    context-path: /test

spring:
  redis:
    database: 0  #redis索引，默认0
    host: 127.0.0.1       #地址
    port: 6379            #端口
    password:             #密码(默认为空)
    lettuce:
      pool:
        max-active: 8   #数据库最大连接数（使用负值表示没有限制）
        max-wait: -1ms  #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 5     #连接池中的最大空闲连接
        min-idle: 0     #连接池中的最小空闲连接
    timeout: 100000ms   #连接超时时间（毫秒）
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #初始化大小，最小，最大
      initial-size: 5
      max-active: 30
      min-idle: 5
      max-wait: 3000                            #获取数据库连接等待的超时时间
      max-open-prepared-statements: -1          #可以同时从语句池分配的最大打开语句数，如果没有限制，则为负数。
      time-between-eviction-runs-millis: 60000  #配置多久进行一次检测，检测需要关闭的空闲连接（毫秒单位）
      min-evictable-idle-time-millis: 30000     #配置连接在连接池中的最小生存时间
      max-evictable-idle-time-millis: 40000     #配置连接在连接池中的最大生存时间
      validation-query: SELECT 1                #系统启动时通过该sql验证数据库是否可用 配置validation-query下面三项才生效
      test-while-idle: true                     #启用空闲连接检测 以便回收
      test-on-borrow: false                     #从连接池获取连接时，是否检测连接可用性，开启性能有所影响
      test-on-return: false                     #释放连接到连接池时，是否检测连接可用性，开启性能有所影响
      pool-prepared-statements: false           #打开PSCache,并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20  #打开PSCache，并且指定每个连接上PSCache的大小
      filters: stat,wall                         #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      use-global-data-source-stat: true          #合并多个DruidDataSource的监控数据
      #connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000    #通过connectProperties属性来打开mergeSql功能；慢SQL记录

master:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: 127.0.0.1
    username: root
    password: 12345678


